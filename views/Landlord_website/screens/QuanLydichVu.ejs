<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Danh sách bài đăng</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
            max-width: 100%;
        }

        .table thead {
            background-color: #f9f9f9;
            text-align: left;
        }

        .table td:first-child,
        .table th:first-child {
            width: 50px;
        }

        .table th,
        .table td {
            padding: 15px;
            border: none;
            width: 100%;
            vertical-align: middle;
            align-items: center;
            justify-content: center;
            text-align: center;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: none;
            border: none !important;
            box-shadow: none !important;
        }

        .table th {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            line-height: normal;
            color: rgb(3, 2, 41);
            font-size: 0.75rem;
            font-weight: 500;
        }

        .table td {
            font-size: 0.75rem;
            font-family: Nunito, sans-serif;
            line-height: 1.66;
            font-weight: 600;
        }

        #iconSelectContainer {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            /* 5 cột, mỗi cột chiếm 1 phần bằng nhau */
            gap: 10px;
            /* Khoảng cách giữa các biểu tượng */
            padding: 10px;
            /* Thêm khoảng cách bên trong */

        }

        .icon-option {
            width: 30px;
            /* Chiều rộng mỗi biểu tượng */
            height: 80px;
            text-align: center;
            /* Căn giữa nội dung bên trong */
            cursor: pointer;
            /* Hiệu ứng trỏ chuột */
            border: 2px solid transparent;
            /* Đường viền mặc định */
            border-radius: 8px;
            /* Bo góc biểu tượng */
            transition: border 0.3s;
            /* Hiệu ứng khi hover */
        }

        .icon-option img {
            width: 100%;
            /* Chiếm toàn bộ chiều rộng của .icon-option */
            height: auto;
            /* Tỷ lệ ảnh không bị méo */
            border-radius: 4px;
            /* Bo góc ảnh */
        }

        .icon-option:hover {
            border-color: #007bff;
            /* Đổi màu viền khi hover */
        }

        .icon-option p {
            margin-top: 5px;
            font-size: 14px;
            /* Kích thước chữ nhỏ gọn */
            color: #333;
        }

        .icon-option {
            cursor: pointer;
            border: 2px solid transparent;
            padding: 5px;
            transition: border-color 0.3s ease;
        }

        .icon-option.selected {
            border-color: #007bff;
            background-color: #f0f8ff;
        }
    </style>
</head>

<body>

    <!-- Header -->

    <div class="d-flex align-items-center justify-content-between mb-4 position-relative mx-3" style="height: 100px;">
        <!-- Back button -->
        <div></div>

        <!-- Centered title -->
        <div class="mx-auto text-center">
            <h1 class="text-primary mb-1">Quản lý nội thất</h1>
        </div>

        <!-- Add button -->
        <button class="btn btn-primary border" style="font-weight: 600;" id="btnAdd">
            Thêm nội thất
        </button>
    </div>

    <!-- <h2 class="text-center" style="color: rgb(0, 0, 0);">Danh sách dịch vụ</h2> -->

    <div class="container-fluid mb-4">
        <!-- add new -->
        <!-- <div class="container my-3">
            <button id="btnAdd" class="btn btn-success btn-lg">
                <i class="bi bi-plus-circle"></i> Add New Service
            </button>
        </div> -->

        <!-- Modal Thêm Dịch vụ -->
        <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addUserModalLabel">Thêm Dịch Vụ Mới</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addUserForm" enctype="multipart/form-data">


                            <!-- Khu vực chọn biểu tượng -->
                            <div class="mb-3">
                                <label for="photos" class="form-label">Chọn biểu tượng nội thất</label>
                                <div id="iconSelectContainer">
                                    <!-- Đây là ví dụ về 10 biểu tượng nội thất có thể tùy chỉnh theo nhu cầu -->
                                    <div class="icon-option" data-name="Sofa" data-icon="/public/icons/sofa.png">
                                        <img src="/public/icons/sofa.png" alt="Sofa" class="img-fluid">
                                        <p>Sofa</p>
                                    </div>
                                    <div class="icon-option" data-name="Bàn ăn" data-icon="/images/icons/table.png">
                                        <img src="/public/icons/table.png" alt="Bàn ăn" class="img-fluid">
                                        <p>Bàn ăn</p>
                                    </div>
                                    <!-- Thêm các biểu tượng khác ở đây -->
                                    <div class="icon-option" data-name="Bathroom"
                                        data-icon="/public/icons/bathroom.png">
                                        <img src="/public/icons/bathroom.png" alt="Bathroom" class="img-fluid">
                                        <p>Nhà tắm</p>
                                    </div>
                                    <div class="icon-option" data-name="dieuhoa" data-icon="/public/icons/dieuhoa.png">
                                        <img src="/public/icons/dieuhoa.png" alt="dieuhoa" class="img-fluid">
                                        <p>Điều hòa</p>
                                    </div>
                                    <div class="icon-option" data-name="Elevator"
                                        data-icon="/public/icons/elevator.png">
                                        <img src="/public/icons/elevator.png" alt="Elevator" class="img-fluid">
                                        <p>Thang máy</p>
                                    </div>
                                    <div class="icon-option" data-name="Garbage_bag"
                                        data-icon="/public/icons/garbage_bag.png">
                                        <img src="/public/icons/garbage-bag.png" alt="Garbage_bag" class="img-fluid">
                                        <p>Dọn rác</p>
                                    </div>
                                    <div class="icon-option" data-name="Kitchen" data-icon="/public/icons/kitchen.png">
                                        <img src="/public/icons/kitchen.png" alt="Kitchen" class="img-fluid">
                                        <p>Gian bếp</p>
                                    </div>
                                    <div class="icon-option" data-name="Bed" data-icon="/public/icons/bed.png">
                                        <img src="/public/icons/bed.png" alt="Bed" class="img-fluid">
                                        <p>Giường</p>
                                    </div>
                                    <div class="icon-option" data-name="Tulanh" data-icon="/public/icons/tulanh.png">
                                        <img src="/public/icons/tulanh.png" alt="Tulanh" class="img-fluid">
                                        <p>Tủ lạnh </p>
                                    </div>
                                    <div class="icon-option" data-name="Nonglanh"
                                        data-icon="/public/icons/nonglanh.png">
                                        <img src="/public/icons/nonglanh.png" alt="Nonglanh" class="img-fluid">
                                        <p>Bình nóng lạnh</p>
                                    </div>

                                </div>
                                <div class="mb-3">
                                    <label for="description" class="form-label">Mô tả</label>
                                    <textarea class="form-control" id="description" rows="3" placeholder="Mô tả dịch vụ"
                                        required></textarea>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">Thêm mới</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal: Sửa dịch vụ -->
        <div class="modal fade" id="editServiceModal" tabindex="-1" aria-labelledby="editServiceModalLabel"
            aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editServiceModalLabel">Sửa Dịch Vụ</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editServiceForm" enctype="multipart/form-data">
                            <input type="hidden" id="editServiceId" />
                            <div class="mb-3">
                                <label for="editName" class="form-label">Tên Dịch Vụ</label>
                                <input type="text" class="form-control" id="editName" disabled />
                            </div>
                            <div class="mb-3">
                                <label for="editDescription" class="form-label">Mô Tả</label>
                                <textarea class="form-control" id="editDescription" rows="3" required></textarea>
                            </div>


                            <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <div class="table table-striped">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th style="width: 10%;">STT</th>
                        <th style="width: 30%;">Dịch vụ</th>
                        <th style="width: 40%;">Mô tả</th>
                        <th style="width: 30%;">Hành động</th>
                    </tr>
                </thead>
                <tbody id="serviceTableBody">
                    <!-- Dữ liệu sẽ được hiển thị ở đây -->
                </tbody>
            </table>
        </div>

    </div>

    <!-- Modal for displaying details -->
    <div class="modal fade" id="detailModal" tabindex="-1" aria-labelledby="detailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailModalLabel">Chi tiết bài đăng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modalBody">
                    <div id="modalContent"></div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        async function loadServices() {
            try {
                let userId = localStorage.getItem('user_id');
                const response = await fetch(`/api/services_mgr/list/${userId}`);

                if (!response.ok) {
                    throw new Error('Failed to fetch services');
                }

                const data = await response.json();
                const services = data.data;

                const tbody = document.getElementById("serviceTableBody");
                tbody.innerHTML = '';

                services.forEach((service, index) => {
                    const tr = document.createElement("tr");

                    tr.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${service.name}</td>
                    <td>${service.description}</td>
                
                     <td>
                        <div class="d-flex justify-content-between w-100">
                            <button class="btn btn-info btn-sm" style="width: 33%" onclick="openDetailModal('${service._id}')">Xem chi tiết</button>
                            <button class="btn btn-warning btn-sm mx-2" style="width: 33%" onclick="editService('${service._id}', '${service.name.replace(/'/g, "\\'")}', '${service.description.replace(/'/g, "\\'")}', '${service.photos}')">Sửa</button>
                            <button class="btn btn-danger btn-sm" style="width: 33%" onclick="deleteService('${service._id}')">Xóa</button>
                        </div>
                    </td>
                `;

                    tbody.appendChild(tr);
                });
            } catch (error) {
                console.error('Error loading services:', error);
            }
        }

        function openDetailModal(serviceId) {
            fetch(`/api/services_mgr/detail/${serviceId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Service not found');
                    }
                    return response.json();
                })
                .then(data => {
                    // Kiểm tra xem data có tồn tại và chứa thông tin dịch vụ hay không
                    console.log('API response:', data);  // In ra phản hồi API để kiểm tra

                    if (!data || !data.data) {
                        throw new Error('Invalid service data');
                    }

                    const service = data.data;
                    const modalContent = document.getElementById('modalContent');

                    // Kiểm tra và xử lý phần ảnh dịch vụ
                    if (service.photos && Array.isArray(service.photos) && service.photos.length > 0) {
                        modalContent.innerHTML = `
                    <h5>Ảnh dịch vụ:</h5>
                    <div id="serviceImages">
                        ${service.photos.map(photo =>
                            `<img src="${photo}" class="img-fluid" style="max-width: 100%; height: auto; margin-bottom: 10px;">`
                        ).join('')}
                    </div>
                `;
                    } else {
                        modalContent.innerHTML = '<p>No images available for this service.</p>';
                    }

                    // Mở modal chi tiết
                    new bootstrap.Modal(document.getElementById('detailModal')).show();
                })
                .catch(err => {
                    console.error('Error fetching details:', err);
                    const modalContent = document.getElementById('modalContent');
                    modalContent.innerHTML = `<p>Error: ${err.message}</p>`;
                    new bootstrap.Modal(document.getElementById('detailModal')).show();
                });
        }


        // Hàm hiển thị modal sửa dịch vụ với thông tin hiện tại của dịch vụ
        function editService(id, name, description, photos) {
            document.getElementById('editServiceId').value = id;
            document.getElementById('editName').value = name;
            document.getElementById('editDescription').value = description;



            if (photos && Array.isArray(photos) && photos.length > 0) {
                photos.forEach(photo => {
                    const img = document.createElement('img');
                    img.src = photo;
                    img.className = 'img-fluid';
                    img.style = 'max-width: 100%; height: auto; margin-bottom: 10px;';
                    photoPreview.appendChild(img);
                });
            }

            // Mở modal sửa dịch vụ
            new bootstrap.Modal(document.getElementById('editServiceModal')).show();
        }

        // Xử lý submit form sửa dịch vụ
        document.getElementById('editServiceForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const data = {
                id: document.getElementById('editServiceId').value,
                description: document.getElementById('editDescription').value,
            };

            let serviceId = data.id;

            try {
                const response = await fetch(`/api/services_mgr/update/${serviceId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    alert('Dịch vụ đã được cập nhật thành công!');
                    const editServiceModal = bootstrap.Modal.getInstance(document.getElementById('editServiceModal'));
                    editServiceModal.hide();
                    loadServices();
                } else {
                    const errorData = await response.json();
                    console.error('Error details:', errorData);
                    alert('Không thể cập nhật dịch vụ: ' + errorData.message);
                }
            } catch (error) {
                console.error('Fetch error:', error);
                alert('Đã xảy ra lỗi: ' + error.message);
            }
        });





        function deleteService(serviceId) {
            if (confirm("Bạn có chắc chắn muốn xóa dịch vụ này?")) {
                fetch(`/api/services_mgr/delete/${serviceId}`, {
                    method: 'DELETE',
                })
                    .then(response => response.json())
                    .then(data => {
                        //loadServices();
                        window.location.reload();
                    })
                    .catch(error => console.error('Error deleting service:', error));
            }
        }


        // add
        document.getElementById("btnAdd").addEventListener("click", function () {
            const addUserModal = new bootstrap.Modal(document.getElementById("addUserModal"));
            addUserModal.show();
        });

        // add
        document.getElementById("btnAdd").addEventListener("click", function () {
            // Mở modal thêm dịch vụ
            const addUserModal = new bootstrap.Modal(document.getElementById("addUserModal"));
            addUserModal.show(); // Sử dụng show() để mở modal
        });

        document.addEventListener('DOMContentLoaded', () => {
            const iconOptions = document.querySelectorAll('.icon-option');
            let selectedIcon = null;

            // Lắng nghe sự kiện click để chọn biểu tượng
            iconOptions.forEach(icon => {
                icon.addEventListener('click', function () {
                    iconOptions.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    selectedIcon = {
                        name: this.querySelector('p').innerText,
                        photos: this.getAttribute('data-icon')
                    };

                    console.log('Selected icon:', selectedIcon);
                });
            });

            // Xử lý form submit
            document.getElementById('addUserForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                if (!selectedIcon) {
                    alert('Vui lòng chọn một biểu tượng nội thất.');
                    return;
                }

                // Tạo FormData và gửi dữ liệu
                const formData = new FormData();
                formData.append('name', selectedIcon.name);    // Lưu tên biểu tượng vào name
                formData.append('photos', selectedIcon.photos); // Lưu đường dẫn ảnh vào image
                formData.append('description', document.getElementById('description').value);

                let userId = localStorage.getItem('user_id');
                const response = await fetch(`/api/services/add/${userId}`, {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    alert('Dịch vụ đã được thêm thành công!');
                    window.location.reload();
                } else {
                    alert('Không thể thêm dịch vụ!');
                }
            });
        });

        loadServices();
    </script>

</body>

</html>