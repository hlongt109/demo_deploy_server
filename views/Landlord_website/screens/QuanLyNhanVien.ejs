<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý người dùng</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        h2 {
            text-align: center;
            color: #333;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            table-layout: fixed;
            max-width: 100%;
        }


        .table thead {
            background-color: #f9f9f9;
            text-align: left;
        }

        .table td:first-child,
        .table th:first-child {
            width: 50px;
        }

        .table th,
        .table td {
            padding: 15px;
            border: none;
            width: 100%;
            vertical-align: middle;
            align-items: center;
            justify-content: center;
            text-align: center;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: none;
            border: none !important;
            box-shadow: none !important;
        }

        .table th {
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            line-height: normal;
            color: rgb(3, 2, 41);
            font-size: 0.75rem;
            font-weight: 500;
        }

        .table td {
            font-size: 0.75rem;
            font-family: Nunito, sans-serif;
            line-height: 1.66;
            font-weight: 600;
        }


        .btn-role {
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 0.875rem;
            color: white;
            font-weight: bold;
        }

        .btn-role.landlord {
            background-color: #28a745;
        }

        .btn-role.ban {
            background-color: #dc3545;
        }

        .btn-role.staffs {
            background-color: #007bff;
        }

        .btn-role.user {
            background-color: #6f42c1;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: #f8f9fa;
        }

        .modal-content {
            border-radius: 10px;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .modal-header {
            border-radius: 10px 10px 0 0;
            padding: 15px;
        }

        .modal-title {
            font-weight: bold;
            font-size: 1.2rem;
        }

        .modal-body {
            padding: 20px;
        }

        .form-label {
            font-weight: bold;
            color: #333;
        }

        .form-control {
            border-radius: 5px;
            padding: 12px;
            font-size: 14px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

        .select2-container .select2-selection--single {
            height: 38px;
            font-size: 14px;
            border-radius: 5px;
            padding: 8px;
        }

        button[type="submit"] {
            background-color: #007bff;
            color: white;
            padding: 12px;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
        }

        button[type="button"].btn-close {
            background-color: transparent;
            border: none;
            color: white;
            font-size: 1.5rem;
        }

        button[type="button"].btn-close:hover {
            color: #ff0000;
        }
    </style>
</head>

<body>
    <div class="content-wrapper">
        <div class="d-flex align-items-center justify-content-between mb-4 position-relative mx-3"
            style="height: 100px;">
            <!-- Back button -->
            <div></div>

            <!-- Centered title -->
            <div class="mx-auto text-center">
                <h1 class="text-primary mb-1">Quản lý nhân viên</h1>
            </div>

            <!-- Add button -->
            <button class="btn btn-primary border" style="font-weight: 600;" id="btnAdd">
                Thêm nhân viên
            </button>
        </div>
        <div class="container-fluid my-4">
            <div class="search-container">

                <!-- Modal: Đặt ngay trước thẻ đóng </body> -->
                <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title text-primary" id="addUserModalLabel">Thêm Người Dùng Mới</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="addUserForm">
                                    <div class="mb-3">
                                        <label for="username" class="form-label">Tên đăng nhập</label>
                                        <input type="text" class="form-control" id="username" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="email" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="password" class="form-label">Mật khẩu</label>
                                        <input type="password" class="form-control" id="password" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="role" class="form-label">Chức vụ</label>
                                        <select class="form-select" id="role" required>
                                            <option value="staffs">Nhân viên</option>
                                            <option value="ban">Bị cấm</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="phone" class="form-label">Số điện thoại</label>
                                        <input type="text" class="form-control" id="phone" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="name" class="form-label">Họ và tên</label>
                                        <input type="text" class="form-control" id="name" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="dob" class="form-label">Ngày sinh</label>
                                        <input type="date" class="form-control" id="dob" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="gender" class="form-label">Giới tính</label>
                                        <select class="form-select" id="gender" required>
                                            <option value="male">Nam</option>
                                            <option value="female">Nữ</option>
                                            <option value="other">Khác</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="address" class="form-label">Địa chỉ</label>
                                        <input type="text" class="form-control" id="address" required>
                                    </div>

                                    <button type="submit" class="btn btn-primary w-100 mt-3">Thêm</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>




                <!-- Modal: Sửa Role -->
                <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editUserModalLabel">Edit User Role</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="editUserForm">
                                    <input type="hidden" id="editUserId" />
                                    <div class="mb-3">
                                        <label for="editRole" class="form-label">Role</label>
                                        <select class="form-select" id="editRole" required>
                                            <option value="staffs">Staffs</option>
                                            <option value="ban">Ban</option>
                                        </select>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>



            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone Number</th>
                        <th>Address</th>
                        <th>Role</th>
                        <th>Act</th>
                    </tr>
                </thead>

                <tbody id="user-table">
                    <!-- Dữ liệu sẽ được render động -->
                </tbody>
            </table>


        </div>

        <script>
            // Lấy userId từ localStorage
            const userId = localStorage.getItem('user_id');
            console.log("User ID:", userId);  // Kiểm tra userId

            // Lấy dữ liệu từ API
            async function fetchAndDisplayUsers() {
                const response = await fetch(`/api/staffs_mgr/list/${userId}`);
                console.log("API Response:", response);  // Kiểm tra phản hồi từ API


                if (response.ok) {
                    const result = await response.json();
                    console.log("Data from API:", result);  // Kiểm tra dữ liệu nhận được từ API
                    const users = result.data;

                    // Render dữ liệu vào bảng
                    renderTable(users);
                } else {
                    console.error("Lỗi khi lấy dữ liệu:", response.statusText);
                }
            }




            // Hàm render dữ liệu lên bảng
            function renderTable(users) {
                const tableBody = document.getElementById('user-table');
                tableBody.innerHTML = ''; // Xóa dữ liệu cũ trong bảng

                // Nếu không có người dùng nào
                if (users.length === 0) {
                    tableBody.innerHTML = '<tr><td colspan="7">Không có dữ liệu</td></tr>';
                    return;
                }

                // Duyệt qua dữ liệu người dùng và thêm vào bảng
                users.forEach((user, index) => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${index + 1}</td>
                        <td>${user.name || 'Không có tên'}</td>
                        <td>${user.email || 'Không có email'}</td>
                        <td>${user.phoneNumber || 'Chưa có số điện thoại'}</td>
                        <td>${user.address || 'Chưa có địa chỉ'}</td>
                        
                        <td><span class="btn-role ${user.role ? user.role.toLowerCase() : ''}">${user.role || 'Chưa có'}</span></td>
                        

                        <td>
                            <div class="d-flex justify-content-between w-100">
                                <button class="btn btn-warning btn-sm mr-2" style="width: 50%;" onclick="editUser('${user._id}', '${user.role}')">Sửa</button>
                                <button class="btn btn-danger btn-sm" style="width: 50%" onclick="confirmDelete('${user._id}')">Xóa</button>
                            </div>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });
            }

            document.addEventListener('DOMContentLoaded', function () {
                fetchAndDisplayUsers(); // Gọi hàm khi trang đã tải xong
            });


            //them
            document.getElementById("btnAdd").addEventListener("click", () => {
                const addUserModal = new bootstrap.Modal(document.getElementById("addUserModal"));
                addUserModal.show();
            });

            document.getElementById("addUserForm").addEventListener("submit", async (e) => {
                e.preventDefault();
                const username = document.getElementById("username").value;
                const email = document.getElementById("email").value;
                const password = document.getElementById("password").value;
                const role = document.getElementById("role").value;
                const name = document.getElementById("name").value;
                const dob = document.getElementById("dob").value;
                const gender = document.getElementById("gender").value;
                const address = document.getElementById("address").value;
                const phoneNumber = document.getElementById("phone").value;

                // Gửi thông tin tới server
                let userId = localStorage.getItem('user_id');
                const response = await fetch(`/api/staffs_mgr/add/${userId}`, {//api add
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        username,
                        email,
                        password,
                        role,
                        name,
                        dob,
                        gender,
                        address,
                        phoneNumber,
                    })
                });
                const data = await response.json();
                if (response.ok) {
                    alert("User added successfully!");
                    e.target.reset();
                    const addUserModal = bootstrap.Modal.getInstance(document.getElementById("addUserModal"));
                    addUserModal.hide();

                    // Tải lại trang
                    window.location.reload();
                } else {
                    alert(`Error: ${data.message}`);
                }
            });


            //xoa
            function confirmDelete(id) {
                if (confirm('Bạn có chắc muốn xóa sản phẩm này?')) {
                    fetch(`/api/delete_mgr/delete/${id}`, {
                        method: 'DELETE'
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Xóa không thành công');
                            }
                            return response.json();
                        })
                        .then(data => {
                            alert(data.message || 'Xóa thành công');
                            window.location.reload();
                        })
                        .catch(error => {
                            console.error(error);
                            alert('Đã xảy ra lỗi khi xóa');
                        });
                }
            }
            //sua
            // Khi nhấn nút Edit, hiển thị modal sửa
            function editUser(userId, currentRole) {
                // Set giá trị hiện tại của role vào modal
                document.getElementById("editUserId").value = userId;
                document.getElementById("editRole").value = currentRole;

                // Hiển thị modal sửa
                const editUserModal = new bootstrap.Modal(document.getElementById("editUserModal"));
                editUserModal.show();
            }

            // Xử lý khi người dùng sửa thông tin role
            document.getElementById("editUserForm").addEventListener("submit", async (e) => {
                e.preventDefault();
                const userId = document.getElementById("editUserId").value;
                const role = document.getElementById("editRole").value;

                // Gửi thông tin sửa đổi tới server
                const response = await fetch(`/api/staffs_mgr/edit/${userId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ role })
                });

                const data = await response.json();
                if (response.ok) {
                    alert("Role updated successfully!");
                    const editUserModal = bootstrap.Modal.getInstance(document.getElementById("editUserModal"));
                    editUserModal.hide();
                    window.location.reload();  // Tải lại trang sau khi sửa thành công
                } else {
                    alert(`Error: ${data.message}`);
                }
            });





            function setupPagination(users) {
                const pageCount = Math.ceil(users.length / ROWS_PER_PAGE);
                const pagination = document.getElementById('pagination');
                pagination.innerHTML = '';

                for (let i = 1; i <= pageCount; i++) {
                    const pageItem = document.createElement('li'); pageItem.className = 'page-item';
                    if (i === 1) pageItem.classList.add('active'); pageItem.innerHTML = ` <a class="page-link" href="#">${i}</a>
        `;
                    pageItem.addEventListener('click', () => {
                        document.querySelector('.page-item.active').classList.remove('active');
                        pageItem.classList.add('active');
                        renderTable(users, i);
                    });
                    pagination.appendChild(pageItem);
                }
            }
        </script>
        <!-- Thêm Bootstrap JS vào cuối trang -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    </div>
</body>

</html>